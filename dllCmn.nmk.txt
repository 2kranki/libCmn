
SYS=win32
TARGETOS=BOTH

as = ml
cc = cl

cvarsmt =

aflags = /DWIN32 /c
!IFDEF  NDEBUG
adebug = /DNDEBUG
cflags = $(cflags) /DNDEBUG /c  /Isrc /Isrc\$(SYS) /arch:IA32
libNam = libCmnR.lib
objdir = $(TMP)\$(SYS)\Release
!ELSE
adebug = /Zd /Zi /D_DEBUG
cflags = $(cflags) /D_DEBUG /c /Isrc /Isrc\$(SYS) /arch:IA32
libNam = libCmnD.lib
objdir = $(TMP)\$(SYS)\Debug
!ENDIF  #NODEBUG



{}.asm{$(objdir)}.obj:
	$(AS) $(adebug) $(aflags) /Cp /coff /Fo$(objdir)\$(@F) src\$(*B).asm

{}.c{$(objdir)}.obj:
	$(cc) $(cdebug) $(cflags) $(cvarsmt) /Fo$(objdir)\$(@F) src\$(*B).c

{src}.asm{$(objdir)}.obj:
	$(AS) $(adebug) $(aflags) /Cp /coff /Fo$(objdir)\$(@F) src\$(*B).asm

{src}.c{$(objdir)}.obj:
	$(cc) $(cdebug) $(cflags) $(cvarsmt) /Fo$(objdir)\$(@F) src\$(*B).c

{src\$(SYS)}.asm{$(objdir)}.obj:
	$(AS) $(adebug) $(aflags) /Cp /coff /Fo$(objdir)\$(@F) src\$(SYS)\$(*B).asm

{src\$(SYS)}.c{$(objdir)}.obj:
	$(cc) $(cdebug) $(cflags) $(cvarsmt) /Fo$(objdir)\$(@F) src\$(SYS)\$(*B).c




# Define Obj Files that make up the Library or DLL.

srcs = 
#srcs = $(srcs) $(SYS)\cmn_osx.c 
#srcs = $(srcs) $(SYS)\memMSC.c 
#srcs = $(srcs) $(SYS)\memMSC_object.c 
srcs = $(srcs) obj.c 
srcs = $(srcs) arrayExpand.c 
srcs = $(srcs) arrayExpand_object.c 
srcs = $(srcs) ascii.c 
srcs = $(srcs) ascii_object.c
srcs = $(srcs) AStr.c
srcs = $(srcs) AStr_object.c
srcs = $(srcs) AStrArray.c
srcs = $(srcs) AStrArray_object.c
srcs = $(srcs) AStrC.c
srcs = $(srcs) AStrC_object.c
srcs = $(srcs) audioCW.c
srcs = $(srcs) audioCW_object.c
srcs = $(srcs) audioWAV.c
srcs = $(srcs) audioWAV_object.c
srcs = $(srcs) bitMatrix.c
srcs = $(srcs) bitMatrix_object.c
srcs = $(srcs) bitSet.c
srcs = $(srcs) bitSet_object.c
srcs = $(srcs) blkdrcds16.c
srcs = $(srcs) blkdrcds16_object.c
srcs = $(srcs) block.c
srcs = $(srcs) block_object.c
srcs = $(srcs) blocks.c
srcs = $(srcs) blocks_object.c
srcs = $(srcs) bptree.c
srcs = $(srcs) bptree_object.c
srcs = $(srcs) btp.c
srcs = $(srcs) btp_object.c
srcs = $(srcs) cb.c
srcs = $(srcs) cb_object.c
srcs = $(srcs) cb16.c
srcs = $(srcs) cb16_object.c
srcs = $(srcs) cb32.c
srcs = $(srcs) cb32_object.c
srcs = $(srcs) cfa.c
srcs = $(srcs) cfa_object.c
srcs = $(srcs) cmdutl.c
srcs = $(srcs) cmdutl_object.c
srcs = $(srcs) con.c
srcs = $(srcs) con_object.c
srcs = $(srcs) con_fio.c
srcs = $(srcs) con_fio_object.c
srcs = $(srcs) consumer.c
srcs = $(srcs) consumer_object.c
srcs = $(srcs) csv.c
srcs = $(srcs) csv_object.c
srcs = $(srcs) dateTime.c
srcs = $(srcs) dateTime_object.c
srcs = $(srcs) dbCsv.c
srcs = $(srcs) dbCsv_object.c
srcs = $(srcs) dbf.c
srcs = $(srcs) dbf_object.c
srcs = $(srcs) dbField.c
srcs = $(srcs) dbField_object.c
srcs = $(srcs) dec.c
srcs = $(srcs) dec_object.c
srcs = $(srcs) devBase.c
srcs = $(srcs) devBase_object.c
srcs = $(srcs) device.c
srcs = $(srcs) device_object.c
srcs = $(srcs) devMgr.c
srcs = $(srcs) devMgr_object.c
srcs = $(srcs) dir.c
srcs = $(srcs) dir_object.c
srcs = $(srcs) dirEntry.c
srcs = $(srcs) dirEntry_object.c
srcs = $(srcs) ebcdic.c
srcs = $(srcs) ebcdic_object.c
srcs = $(srcs) endian.c
srcs = $(srcs) endian_object.c
srcs = $(srcs) eResult.c
srcs = $(srcs) eResult_object.c
srcs = $(srcs) execArray.c
srcs = $(srcs) execArray_object.c
srcs = $(srcs) false.c
srcs = $(srcs) false_object.c
srcs = $(srcs) fbsi.c
srcs = $(srcs) fbsi_object.c
srcs = $(srcs) fbso.c
srcs = $(srcs) fbso_object.c
srcs = $(srcs) file.c
srcs = $(srcs) file_object.c
srcs = $(srcs) fileio.c
srcs = $(srcs) fileio_object.c
srcs = $(srcs) greg.c
srcs = $(srcs) greg_object.c
srcs = $(srcs) hash32.c
srcs = $(srcs) hash32_object.c
srcs = $(srcs) hex.c
srcs = $(srcs) hex_object.c
srcs = $(srcs) histBase.c
srcs = $(srcs) histBase_object.c
srcs = $(srcs) ioMgr.c
srcs = $(srcs) ioMgr_object.c
srcs = $(srcs) ioRcd.c
srcs = $(srcs) ioRcd_object.c
srcs = $(srcs) json.c
srcs = $(srcs) json_object.c
srcs = $(srcs) lru.c
srcs = $(srcs) lru_object.c
srcs = $(srcs) misc.c
srcs = $(srcs) misc_object.c
srcs = $(srcs) name.c
srcs = $(srcs) name_object.c
srcs = $(srcs) node.c
srcs = $(srcs) node_object.c
srcs = $(srcs) nodeArc.c
srcs = $(srcs) nodeArc_object.c
srcs = $(srcs) nodeArray.c
srcs = $(srcs) nodeArray_object.c
srcs = $(srcs) nodeATree.c
srcs = $(srcs) nodeATree_object.c
srcs = $(srcs) nodeEntry.c
srcs = $(srcs) nodeEntry_object.c
srcs = $(srcs) nodeGraph.c
srcs = $(srcs) nodeGraph_object.c
srcs = $(srcs) nodeHash.c
srcs = $(srcs) nodeHash_object.c
srcs = $(srcs) nodeList.c
srcs = $(srcs) nodeList_object.c
srcs = $(srcs) nodeMatrix.c
srcs = $(srcs) nodeMatrix_object.c
srcs = $(srcs) nodeScan.c
srcs = $(srcs) nodeScan_object.c
srcs = $(srcs) nodeTree.c
srcs = $(srcs) nodeTree_object.c
srcs = $(srcs) null.c
srcs = $(srcs) null_object.c
srcs = $(srcs) number.c
srcs = $(srcs) number_object.c
srcs = $(srcs) objArray.c
srcs = $(srcs) objArray_object.c
srcs = $(srcs) objCb.c
srcs = $(srcs) objCb_object.c
srcs = $(srcs) objHash.c
srcs = $(srcs) objHash_object.c
srcs = $(srcs) objList.c
srcs = $(srcs) objList_object.c
srcs = $(srcs) objMatrix.c
srcs = $(srcs) objMatrix_object.c
srcs = $(srcs) path.c
srcs = $(srcs) path_object.c
srcs = $(srcs) plist.c
srcs = $(srcs) plist_object.c
srcs = $(srcs) prt.c
srcs = $(srcs) prt_object.c
srcs = $(srcs) psxCond.c
srcs = $(srcs) psxCond_object.c
srcs = $(srcs) psxMutex.c
srcs = $(srcs) psxMutex_object.c
srcs = $(srcs) psxSem.c
srcs = $(srcs) psxSem_object.c
srcs = $(srcs) psxThread.c
srcs = $(srcs) psxThread_object.c
srcs = $(srcs) ptrArray.c
srcs = $(srcs) ptrArray_object.c
srcs = $(srcs) pwr2Array.c
srcs = $(srcs) pwr2Array_object.c
srcs = $(srcs) rrds32.c
srcs = $(srcs) rrds32_object.c
srcs = $(srcs) sidx.c
srcs = $(srcs) sidx_object.c
srcs = $(srcs) srcFile.c
srcs = $(srcs) srcFile_object.c
srcs = $(srcs) srcFiles.c
srcs = $(srcs) srcFiles_object.c
srcs = $(srcs) srcLoc.c
srcs = $(srcs) srcLoc_object.c
srcs = $(srcs) szHash.c
srcs = $(srcs) szHash_object.c
srcs = $(srcs) szTbl.c
srcs = $(srcs) szTbl_object.c
srcs = $(srcs) table.c
srcs = $(srcs) table_object.c
srcs = $(srcs) ternary.c
srcs = $(srcs) ternary_object.c
srcs = $(srcs) token.c
srcs = $(srcs) token_object.c
srcs = $(srcs) tokenList.c
srcs = $(srcs) tokenList_object.c
srcs = $(srcs) trace.c
srcs = $(srcs) trace_object.c
srcs = $(srcs) true.c
srcs = $(srcs) true_object.c
srcs = $(srcs) u8Array.c
srcs = $(srcs) u8Array_object.c
srcs = $(srcs) u12Array.c
srcs = $(srcs) u12Array_object.c
srcs = $(srcs) u16Array.c
srcs = $(srcs) u16Array_object.c
srcs = $(srcs) u16Matrix.c
srcs = $(srcs) u16Matrix_object.c
srcs = $(srcs) u32Array.c
srcs = $(srcs) u32Array_object.c
srcs = $(srcs) uint128.c
srcs = $(srcs) uint128_object.c
srcs = $(srcs) utf8.c
srcs = $(srcs) utf8_object.c
srcs = $(srcs) wav.c
srcs = $(srcs) wav_object.c
srcs = $(srcs) WStr.c
srcs = $(srcs) WStr_object.c
srcs = $(srcs) WStrArray.c
srcs = $(srcs) WStrArray_object.c
srcs = $(srcs) WStrC.c
srcs = $(srcs) WStrC_object.c
srcs = $(srcs) xml.c
srcs = $(srcs) xml_object.c
srcs = $(srcs) block16.c
srcs = $(srcs) cb8.c
srcs = $(srcs) listdl.c
srcs = $(srcs) obj.c
srcs = $(srcs) str.c
srcs = $(srcs) tokenFromJSON.c


#objs = $(srcs:.c=.obj)




.SUFFIXES:
.SUFFIXES: .asm .c .obj


!IFDEF   NODEBUG
LIBNAM = .\Vcn\Lib\Release\$(RmwLibNam)
LRFNAM = $(LIBPRE)$(COMPILER).lbc
!ELSE
LIBNAM = .\Vcn\Lib\Debug\$(RmwLibNam)
LRFNAM = $(LIBPRE)$(COMPILER)d.lbc
!ENDIF




$(LIBNAM):  $(objs)
	if exist $(LIBNAM) del $(LIBNAM)
	lib /OUT:$(LIBNAM) @<<$(LRFNAM)
$(objs: =  )
<<NOKEEP





$(objdir)\cmn_msc.obj: src\$(SYS)\cmn_msc.c

$(objdir)\memMSC.obj: src\$(SYS)\memMSC.c

$(objdir)\memMSC_object.obj: src\$(SYS)\memMSC_object.c

$(objdir)\ascii.obj: src\ascii.c

$(objdir)\ascii_object.obj: src\ascii_object.c

$(objdir)\obj.obj: src\obj.c


objs =
objs = $(objs) $(objdir)\cmn_msc.obj
objs = $(objs) $(objdir)\memMSC.obj
objs = $(objs) $(objdir)\memMSC_object.obj
objs = $(objs) $(objdir)\ascii.obj
objs = $(objs) $(objdir)\ascii_object.obj


clean:
	if exist $(objdir) rmdir /S /Q $(objdir)



create_dirs:
	if not exist $(objdir) mkdir $(objdir)



all:  clean create_dirs $(objs) 




